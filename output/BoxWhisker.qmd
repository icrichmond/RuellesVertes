---
title: "Title: Testing a rapid assessment approach for measuring ecosystem services in urban green alleys"
format: 
  html:
    self-contained: true
    fig-width: 15
    fig-height: 15
    toc: true
    toc-depth: 2
    toc-location: right
knitr:
  opts_knit:
    root.dir: "C:/Users/I_RICHMO/Documents/Repositories/ruelles-vertes"
---

Authors: Marie C Dade, Isabella C. Richmond, Jesse T Rieb, Erin Crockett, Kayleigh Hutt-Taylor, Serena Sinno, Karina Benessaiah, Catherine Destrempes, Jackie Hamilton, Fatemeh Izadi, L. Emily Kroft, Lingshan Li, Michael Paulauskas, Klara J Winkler, Elena M Bennett, Carly D Ziter



```{r, echo = F, eval = T, message = F, warning = F}
source('R/packages.R')
```


## Box & Whisker Plots

## Temperature

```{r, echo = F, eval = T, fig.width=16, fig.height=10}
tar_load(model_max_temp)

tmax_vs <- dwplot(model_max_temp[[1]]$veg_Avg_max_daily_temp,
                  dot_args = list(color = "red"), 
                  whisker_args = list(color = "black")) %>% relabel_predictors(Groundcover_avg = "Ground Cover (%)", Midstorey_avg = "Midstorey Cover (%)", Canopy_avg = "Canopy Cover (%)", Ruelle_length_m = "Ruelle Length (m)", Ruelle_area_m2 = "Ruelle Area (m2)")+
  theme_classic() + 
  geom_vline(xintercept = 0, linetype = "dotted") +
  theme(legend.position = "none", 
        axis.text = element_text(size = 16)) + 
  labs(x = "Estimate") 

tmax_b50 <- dwplot(model_max_temp[[2]]$Avg_max_daily_temp_50,
                  dot_args = list(color = "red"), 
                  whisker_args = list(color = "black")) %>% relabel_predictors(perveggr = "Vegetation Cover (%)", perbuild = "Building Cover (%)", percan = "Canopy Cover (%)", road_area_m2 = "Road Area (m2)")+
  theme_classic() + 
  geom_vline(xintercept = 0, linetype = "dotted") +
  theme(legend.position = "none", 
        axis.text = element_text(size = 16),
        plot.subtitle = element_text(size = 16)) + 
  labs(x = "Estimate", subtitle = "50 m buffer")
  

tmax_b100 <- dwplot(model_max_temp[[2]]$Avg_max_daily_temp_100,
                  dot_args = list(color = "red"), 
                  whisker_args = list(color = "black")) %>% relabel_predictors(perveggr = "Vegetation Cover (%)", perbuild = "Building Cover (%)", percan = "Canopy Cover (%)", road_area_m2 = "Road Area (m2)")+
  theme_classic() + 
  geom_vline(xintercept = 0, linetype = "dotted") +
  theme(legend.position = "none", 
        axis.text = element_text(size = 16),
        plot.subtitle = element_text(size = 16)) + 
  labs(x = "Estimate", subtitle = "100 m buffer")
  
print(tmax_vs + tmax_b50 / tmax_b100 + plot_annotation("Figure 1. Average maximum temperature", theme = theme(plot.title = element_text(size = 20))))
```


```{r, echo = F, eval = T, fig.width=16, fig.height=10}
tar_load(model_min_temp)

tmin_vs <- dwplot(model_min_temp[[1]]$veg_Avg_min_daily_temp,
                  dot_args = list(color = "red"), 
                  whisker_args = list(color = "black")) %>% relabel_predictors(Groundcover_avg = "Ground Cover (%)", Midstorey_avg = "Midstorey Cover (%)", Canopy_avg = "Canopy Cover (%)", Ruelle_length_m = "Ruelle Length (m)", Ruelle_area_m2 = "Ruelle Area (m2)")+
  theme_classic() + 
  geom_vline(xintercept = 0, linetype = "dotted") +
  theme(legend.position = "none", 
        axis.text = element_text(size = 16)) + 
  labs(x = "Estimate") 

tmin_b50 <- dwplot(model_min_temp[[2]]$Avg_min_daily_temp_50,
                  dot_args = list(color = "red"), 
                  whisker_args = list(color = "black")) %>% relabel_predictors(perveggr = "Vegetation Cover (%)", perbuild = "Building Cover (%)", percan = "Canopy Cover (%)", road_area_m2 = "Road Area (m2)")+
  theme_classic() + 
  geom_vline(xintercept = 0, linetype = "dotted") +
  theme(legend.position = "none", 
        axis.text = element_text(size = 16),
        plot.subtitle = element_text(size = 16)) + 
  labs(x = "Estimate", subtitle = "50 m buffer")
  

tmin_b100 <- dwplot(model_min_temp[[2]]$Avg_min_daily_temp_100,
                  dot_args = list(color = "red"), 
                  whisker_args = list(color = "black")) %>% relabel_predictors(perveggr = "Vegetation Cover (%)", perbuild = "Building Cover (%)", percan = "Canopy Cover (%)", road_area_m2 = "Road Area (m2)")+
  theme_classic() + 
  theme(legend.position = "none", 
        axis.text = element_text(size = 16),
        plot.subtitle = element_text(size = 16)) + 
  geom_vline(xintercept = 0, linetype = "dotted") + 
  labs(x = "Estimate", subtitle = "100 m buffer")
  
print(tmin_vs + tmin_b50 / tmin_b100 + plot_annotation("Figure 2. Average minimum temperature", theme = theme(plot.title = element_text(size = 20))))
```


## Noise

```{r, echo = F, eval = T, fig.width=16, fig.height=10}
tar_load(model_noise)

noise_vs <- dwplot(model_noise[[1]]$veg_mean_NDSI,
                  dot_args = list(color = "red"), 
                  whisker_args = list(color = "black")) %>% relabel_predictors(Groundcover_avg = "Ground Cover (%)", Midstorey_avg = "Midstorey Cover (%)", Canopy_avg = "Canopy Cover (%)", Ruelle_length_m = "Ruelle Length (m)", Ruelle_area_m2 = "Ruelle Area (m2)")+
  theme_classic() + 
  geom_vline(xintercept = 0, linetype = "dotted") +
  theme(legend.position = "none", 
        axis.text = element_text(size = 16)) + 
  labs(x = "Estimate") 


noise_b50 <- dwplot(model_noise[[2]]$mean_NDSI_50,
                  dot_args = list(color = "red"), 
                  whisker_args = list(color = "black")) %>% relabel_predictors(perveggr = "Vegetation Cover (%)", perbuild = "Building Cover (%)", percan = "Canopy Cover (%)", road_area_m2 = "Road Area (m2)")+
  theme_classic() + 
  geom_vline(xintercept = 0, linetype = "dotted") +
  theme(legend.position = "none", 
        axis.text = element_text(size = 16),
        plot.subtitle = element_text(size = 16)) + 
  labs(x = "Estimate", subtitle = "50 m buffer")
  

noise_b100 <- dwplot(model_noise[[2]]$mean_NDSI_100,
                  dot_args = list(color = "red"), 
                  whisker_args = list(color = "black")) %>% relabel_predictors(perveggr = "Vegetation Cover (%)", perbuild = "Building Cover (%)", percan = "Canopy Cover (%)", road_area_m2 = "Road Area (m2)")+
  theme_classic() + 
  theme(legend.position = "none", 
        axis.text = element_text(size = 16),
        plot.subtitle = element_text(size = 16)) + 
  geom_vline(xintercept = 0, linetype = "dotted") + 
  labs(x = "Estimate", subtitle = "100 m buffer")
  
print((noise_vs) / (noise_b50 + noise_b100) + plot_annotation("Figure 3. Average noise", theme = theme(plot.title = element_text(size = 20))))
```


## Floral Habitat 

```{r, echo = F, eval = T, fig.width=16, fig.height=10}
tar_load(model_habitat)

habitat_vs <- dwplot(model_habitat[[1]]$veg_Floral_coverage_per_m2,
                  dot_args = list(color = "red"), 
                  whisker_args = list(color = "black")) %>% relabel_predictors(Groundcover_avg = "Ground Cover (%)", Midstorey_avg = "Midstorey Cover (%)", Canopy_avg = "Canopy Cover (%)", Ruelle_length_m = "Ruelle Length (m)", Ruelle_area_m2 = "Ruelle Area (m2)")+
  theme_classic() + 
  geom_vline(xintercept = 0, linetype = "dotted") +
  theme(legend.position = "none", 
        axis.text = element_text(size = 16)) + 
  labs(x = "Estimate")



print(habitat_vs + plot_annotation("Figure 4. Floral Habitat", theme = theme(plot.title = element_text(size = 20))))
```


## Food Provisioning 
```{r, echo = F, eval = T, fig.width=16, fig.height=10}
tar_load(model_food)

food_vs <- dwplot(model_food[[1]]$veg_Food_coverage_per_m2,
                  dot_args = list(color = "red"), 
                  whisker_args = list(color = "black")) %>% relabel_predictors(Groundcover_avg = "Ground Cover (%)", Midstorey_avg = "Midstorey Cover (%)", Canopy_avg = "Canopy Cover (%)", Ruelle_length_m = "Ruelle Length (m)", Ruelle_area_m2 = "Ruelle Area (m2)")+
  theme_classic() + 
  geom_vline(xintercept = 0, linetype = "dotted") +
  theme(legend.position = "none", 
        axis.text = element_text(size = 16)) + 
  labs(x = "Estimate")

print(food_vs  + plot_annotation("Figure 5. Food provision", theme = theme(plot.title = element_text(size = 20))))
```
